data:
  train_files: hiyouga/math12k@train
  val_files: hiyouga/math12k@test
  prompt_key: prompt
  answer_key: answer
  image_key: images
  max_prompt_length: 16384
  max_response_length: 8192
  #for rollout batch size this should be increased on larger GPU clusters
  rollout_batch_size: 256
  val_batch_size: 512
  format_prompt: ./examples/format_prompt/chartQA.jinja
  override_chat_template: null
  shuffle: true
  seed: 1
  max_pixels: 4194304
  min_pixels: 262144
  filter_overlong_prompts: false

algorithm:
  adv_estimator: grpo
  disable_kl: false
  use_kl_loss: true
  kl_penalty: low_var_kl
  kl_coef: 1.0e-2

worker:
  actor:
  #we can make it smaller
    global_batch_size: 64
    #according to issue: https://github.com/hiyouga/EasyR1/issues/6
    #this reduces VRAM usage, we * 0.5
    micro_batch_size_per_device_for_update: 2
    micro_batch_size_per_device_for_experience: 8
    max_grad_norm: 1.0
    padding_free: true
    ulysses_sequence_parallel_size: 1
    model:
      model_path: Qwen/Qwen2.5-7B-Instruct
      enable_gradient_checkpointing: true
      trust_remote_code: false
      freeze_vision_tower: false
    optim:
      lr: 1.0e-6
      weight_decay: 1.0e-2
      strategy: adamw  # {adamw, adamw_bf16}
      lr_warmup_ratio: 0.0
    fsdp:
      enable_full_shard: true
      enable_cpu_offload: false
      enable_rank0_init: true
    offload:
      offload_params: false  # true: more CPU memory; false: more GPU memory
      offload_optimizer: false  # true: more CPU memory; false: more GPU memory

  rollout:
    n: 5
    temperature: 1.0
    top_p: 0.99
    gpu_memory_utilization: 0.4
    enforce_eager: false
    enable_chunked_prefill: false
    tensor_parallel_size: 2
    limit_images: 2
    val_override_config:
      temperature: 0.5
      n: 1

  ref:
    fsdp:
      enable_full_shard: true
      enable_cpu_offload: false  # true: more CPU memory; false: more GPU memory
      enable_rank0_init: true
    offload:
      offload_params: false

  reward:
    reward_type: llm_batch
    reward_function: ./examples/reward_function/refocus_llm.py:compute_score

trainer:
  total_epochs: 2000
  max_steps: 2000
  project_name: easy_r1
  experiment_name: LLM-J
  logger: ["console", "wandb"]
  nnodes: 1
  n_gpus_per_node: 8
  val_freq: 2  # -1 to disable
  val_before_train: true
  val_only: false
  val_generations_to_log: 3
  save_freq: 5  # -1 to disable
  save_limit: 20  # -1 to disable
  save_checkpoint_path: ./checkpoints
  load_checkpoint_path: null
